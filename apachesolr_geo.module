<?php

// Center point is Denver.
define('APACHESOLR_GEO_SEARCH_CENTER_POINT', '39.7391667,-104.9841667');
define('APACHESOLR_GEO_FACET_OPTIONS', '0.5,0.1,0.01');
define('APACHESOLR_GEO_DEFAULT_RADIUS', 100);

/**
 * Implements hook_apachesolr_field_mappings_alter().
 */
function apachesolr_geo_apachesolr_field_mappings_alter(&$mappings, $entity_type) {
  // Stop on broken geofield implementation.
  $mappings['geofield']['indexing_callback'] = 'apachesolr_geo_geofield_indexing_callback';
  $mappings['geofield']['query types'] = array('apachesolr_geo');
  $mappings['geofield']['map callback'] = 'apachesolr_geo_map_callback';

  $mappings['geofield']['index_type'] = 'location';

}

/**
 * Callback that converts list module field into an array
 * For every multivalued value we also add a single value to be able to
 * use the stats
 */
function apachesolr_geo_geofield_indexing_callback($entity, $field_name, $index_key, $field_info) {
  $fields = array();
  $numeric = TRUE;
  if (!empty($entity->{$field_name})) {
    $field = $entity->$field_name;
    list($lang, $values) = each($field);

    for ($i = 0; $i < count($values); $i++) {
      $fields[] = array(
        'key' => $index_key,
        'value' => apachesolr_geo_geofield_latlon($values[$i]),
      );

      // Only store the first value of the field in a singular index
      if ($i == 0) {
        $singular_field_info = $field_info;
        $singular_field_info['multiple'] = FALSE;
        $single_key = apachesolr_index_key($singular_field_info);
        $fields[] = array(
          'key' => $single_key,
          'value' => apachesolr_geo_geofield_latlon($values[$i]),
        );
      }
    }
  }
  return $fields;
}

function apachesolr_geo_geofield_latlon($value) {
  return $value['lat'] . ',' . $value['lon'];
}

/**
 * Implements hook_facetapi_query_types().
 */
function apachesolr_geo_facetapi_query_types() {
  return array(
    'apachesolr_geo' => array(
      'handler' => array(
        'class' => 'FacetapiApachesolrGeoQueryType',
        'adapter' => 'apachesolr',
      ),
    ),
  );
}

/**
 * Map of the facet labels.
 *
 * @param array $values
 * @param array $options
 * @return type
 */
function apachesolr_geo_map_callback(array $values, array $options) {
  $map = array();
  foreach ($values as $key) {
    $map[$key] = substr($key, 1) . 'km';
  }
  return $map;
}
